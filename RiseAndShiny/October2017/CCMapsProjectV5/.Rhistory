can_loc <- c(can_loc, cl)
}
p1 <- '100 Av. San Patricio Ste A10, Guaynabo, 00968, Puerto Rico'
p2 <- 'Los Colobos II, State Road 3, Bo Canovanillas Carolina, PR 00983'
p3 <- '725 W Main Ave, Bayam贸n, 00961, Puerto Rico'
int_loc <- c(can_loc, p1, p2, p3)
dfint <- data.frame(unlist(int_loc))
write.csv(dfint, file='~\Downloads\BBBY_addresses_Canada_PR_Sept.csv')
# Addresses still need to be geocoded. See python script.
library(rvest)
library(dplyr)
canada <- 'https://www.bedbathandbeyond.ca/store/selfservice/CanadaStoreLocator'
page <- read_html(canada)
canadaBB <- page %>%
html_nodes("div.address") %>%
html_text()
can_loc <- list()
for(i in canadaBB){
cl <- gsub('[\n\t]', '', i)
can_loc <- c(can_loc, cl)
}
p1 <- '100 Av. San Patricio Ste A10, Guaynabo, 00968, Puerto Rico'
p2 <- 'Los Colobos II, State Road 3, Bo Canovanillas Carolina, PR 00983'
p3 <- '725 W Main Ave, Bayam贸n, 00961, Puerto Rico'
int_loc <- c(can_loc, p1, p2, p3)
dfint <- data.frame(unlist(int_loc))
write_csv(dfint, file='~\Downloads\BBBY_addresses_Canada_PR_Sept.csv')
# Addresses still need to be geocoded. See python script.
library(rvest)
library(dplyr)
canada <- 'https://www.bedbathandbeyond.ca/store/selfservice/CanadaStoreLocator'
page <- read_html(canada)
canadaBB <- page %>%
html_nodes("div.address") %>%
html_text()
can_loc <- list()
for(i in canadaBB){
cl <- gsub('[\n\t]', '', i)
can_loc <- c(can_loc, cl)
}
p1 <- '100 Av. San Patricio Ste A10, Guaynabo, 00968, Puerto Rico'
p2 <- 'Los Colobos II, State Road 3, Bo Canovanillas Carolina, PR 00983'
p3 <- '725 W Main Ave, Bayam贸n, 00961, Puerto Rico'
int_loc <- c(can_loc, p1, p2, p3)
dfint <- data.frame(unlist(int_loc))
write_csv(dfint, file='~/Downloads/BBBY_addresses_Canada_PR_Sept.csv')
# Addresses still need to be geocoded. See python script.
library(rvest)
library(dplyr)
canada <- 'https://www.bedbathandbeyond.ca/store/selfservice/CanadaStoreLocator'
page <- read_html(canada)
canadaBB <- page %>%
html_nodes("div.address") %>%
html_text()
can_loc <- list()
for(i in canadaBB){
cl <- gsub('[\n\t]', '', i)
can_loc <- c(can_loc, cl)
}
p1 <- '100 Av. San Patricio Ste A10, Guaynabo, 00968, Puerto Rico'
p2 <- 'Los Colobos II, State Road 3, Bo Canovanillas Carolina, PR 00983'
p3 <- '725 W Main Ave, Bayam贸n, 00961, Puerto Rico'
int_loc <- c(can_loc, p1, p2, p3)
dfint <- data.frame(unlist(int_loc))
write.csv(dfint, file='~/Downloads/BBBY_addresses_Canada_PR_Sept.csv')
# Addresses still need to be geocoded. See python script.
library(rvest)
library(dplyr)
ca <- 'https://stores.worldmarket.com/ca.html'
va <- 'https://stores.worldmarket.com/va.html'
al <- 'https://stores.worldmarket.com/al.html'
az <- 'https://stores.worldmarket.com/az.html'
co <- 'https://stores.worldmarket.com/co.html'
dc <- 'https://stores.worldmarket.com/dc.html'
fl <- 'https://stores.worldmarket.com/fl.html'
ga <- 'https://stores.worldmarket.com/ga.html'
ia <- 'https://stores.worldmarket.com/ia.html'
id <- 'https://stores.worldmarket.com/id.html'
il <- 'https://stores.worldmarket.com/il.html'
ind <- 'https://stores.worldmarket.com/in.html'
ks <- 'https://stores.worldmarket.com/ks.html'
ky <- 'https://stores.worldmarket.com/ky.html'
la <- 'https://stores.worldmarket.com/la.html'
ma <- 'https://stores.worldmarket.com/ma.html'
md <- 'https://stores.worldmarket.com/md.html'
mi <- 'https://stores.worldmarket.com/mi.html'
mn <- 'https://stores.worldmarket.com/mn.html'
mo <- 'https://stores.worldmarket.com/mo.html'
mt <- 'https://stores.worldmarket.com/mt.html'
nc <- 'https://stores.worldmarket.com/nc.html'
ne <- 'https://stores.worldmarket.com/ne.html'
nj <- 'https://stores.worldmarket.com/nj.html'
nm <- 'https://stores.worldmarket.com/nm.html'
nv <- 'https://stores.worldmarket.com/nv.html'
ny <- 'https://stores.worldmarket.com/ny.html'
oh <- 'https://stores.worldmarket.com/oh.html'
or <- 'https://stores.worldmarket.com/or.html'
pa <- 'https://stores.worldmarket.com/pa.html'
sc <- 'https://stores.worldmarket.com/sc.html'
sd <- 'https://stores.worldmarket.com/sd.html'
tn <- 'https://stores.worldmarket.com/tn.html'
tx <- 'https://stores.worldmarket.com/tx.html'
ut <- 'https://stores.worldmarket.com/ut.html'
wa <- 'https://stores.worldmarket.com/wa.html'
wi <- 'https://stores.worldmarket.com/wi.html'
# Create Link List for every state page
page <- read_html(nm)
wm_nm <- page %>%
html_nodes("a.c-directory-list-content-item-link") %>%
html_attr("href")
# Parse all Link Lists
loc_store <- list()
wm_scrape <- function(address, loc=loc_store){
if (length(address) > 1){
for (i in address){
page <- read_html(paste('https://stores.worldmarket.com/',i,sep=''))
location <- page %>%
html_nodes("address.c-address") %>%
html_text()
loc = c(loc, location)
}
} else {
page <- read_html(paste('https://stores.worldmarket.com/',address[1],sep=''))
location <- page %>%
html_nodes("div.c-location-grid-item-address") %>%
html_text()
loc = c(loc, location)
}
return(loc)
}
# loc_store <- wm_scrape(wm_al)
# loc_store <- wm_scrape(wm_az)
# ...
wrldF <- data.frame(unlist(loc_store))
write.csv(wrldF, file='~/Downloads/BBBY_world_market_locations_Sept.csv')
# Addresses still need to be geocoded. See python script.
loc_store <- wm_scrape(wm_nm)
wrldF <- data.frame(unlist(loc_store))
View(wrldF)
tractor <- taco %>% filter(store != 'Tractor Supply Co')
nottractor <- taco %>% filter(store != 'Tractor Supply Co')
View(nottractor)
write_csv(nottractor, '~/Downloads/TSCO_manual_poly_locations.csv')
loc_store <- wm_scrape(wm_nm)
wrldF <- data.frame(unlist(loc_store))
View(wrldF)
states <- c("ca", "va", "al", "az", "co", "dc", "fl", "ga", "ia", "id", "il", "ind", "ks", "ky", "la", "ma", "md", "mi", "mn",
"mo", "mt", "nc", "ne", "nj", "nm", "nv", "ny", "oh", "or", "pa", "sc", "sd", "tn", "tx", "ut", "wa", "wi")
rvest_funct <- function(states){
state_pages <- list()
for (s in states){
page <- read_html(nm)
result <- page %>%
html_nodes("a.c-directory-list-content-item-link") %>%
html_attr("href")
state_pages = c(state_pages, result)
}
return(states_pages)
}
address_collect <- rvest_funct(states)
rvest_funct <- function(states){
state_pages <- list()
for (s in states){
page <- read_html(nm)
result <- page %>%
html_nodes("a.c-directory-list-content-item-link") %>%
html_attr("href")
state_pages = c(state_pages, result)
}
return(state_pages)
}
address_collect <- rvest_funct(states)
address_collect
rvest_funct <- function(states){
state_pages <- list()
for (s in states){
page <- read_html(s)
result <- page %>%
html_nodes("a.c-directory-list-content-item-link") %>%
html_attr("href")
state_pages = c(state_pages, result)
}
return(state_pages)
}
address_collect <- rvest_funct(states)
state_links <- c('https://stores.worldmarket.com/ca.html','https://stores.worldmarket.com/va.html',
'https://stores.worldmarket.com/al.html','https://stores.worldmarket.com/az.html',
'https://stores.worldmarket.com/co.html','https://stores.worldmarket.com/dc.html',
'https://stores.worldmarket.com/fl.html','https://stores.worldmarket.com/ga.html',
'https://stores.worldmarket.com/ia.html','https://stores.worldmarket.com/id.html',
'https://stores.worldmarket.com/il.html','https://stores.worldmarket.com/in.html',
'https://stores.worldmarket.com/ks.html','https://stores.worldmarket.com/ky.html',
'https://stores.worldmarket.com/la.html','https://stores.worldmarket.com/ma.html',
'https://stores.worldmarket.com/md.html','https://stores.worldmarket.com/mi.html',
'https://stores.worldmarket.com/mn.html','https://stores.worldmarket.com/mo.html',
'https://stores.worldmarket.com/mt.html','https://stores.worldmarket.com/nc.html',
'https://stores.worldmarket.com/ne.html','https://stores.worldmarket.com/nj.html',
'https://stores.worldmarket.com/nm.html','https://stores.worldmarket.com/nv.html',
'https://stores.worldmarket.com/ny.html','https://stores.worldmarket.com/oh.html',
'https://stores.worldmarket.com/or.html','https://stores.worldmarket.com/pa.html',
'https://stores.worldmarket.com/sc.html','https://stores.worldmarket.com/sd.html',
'https://stores.worldmarket.com/tn.html','https://stores.worldmarket.com/tx.html',
'https://stores.worldmarket.com/ut.html','https://stores.worldmarket.com/wa.html',
'https://stores.worldmarket.com/wi.html')
address_collect <- rvest_funct(state_links)
loc_store <- list()
wm_scrape <- function(address, loc=loc_store){
if (length(address) > 1){
for (i in address){
page <- read_html(paste('https://stores.worldmarket.com/',i,sep=''))
location <- page %>%
html_nodes("address.c-address") %>%
html_text()
loc = c(loc, location)
}
} else {
page <- read_html(paste('https://stores.worldmarket.com/',address[1],sep=''))
location <- page %>%
html_nodes("div.c-location-grid-item-address") %>%
html_text()
loc = c(loc, location)
}
return(loc)
}
store_locations <- wm_scrape(address_collect)
wrldF <- data.frame(unlist(store_locations))
View(wrldF)
write.csv(wrldF, file='~/Downloads/BBBY_world_market_locations_Sept.csv')
write.csv(wrldF, file='~/Downloads/BBBY_world_market_locations_Sept17.csv')
wrld_markets <- wrldF %>% distinct()
write.csv(wrld_markets, file='~/Downloads/BBBY_world_market_locations_Sept17.csv')
library(readr)
lastquarter <- read_csv("~/DataMis/moad/Equities/BBBY/locations/Locations_Q1_2017/WorldMarket_locations_all.csv")
View(lastquarter)
library(readr)
thisquarter <- read_csv("~/DataMis/moad/Equities/BBBY/locations/Locations_Q2_2017/BBBY_world_market_locations_Sept17.csv")
View(thisquarter)
compare <- anti_join(lastquarter, thisquarter)
View(compare)
compare2 <- anti_join(thisquarter, lastquarter)
View(compare2)
View(compare)
View(lastquarter)
View(compare2)
library(readr)
currentquarter <- read_csv("~/DataMis/moad/Equities/BBBY/locations/Locations_Q2_2017/BBBY_world_market_locations_Sept17.csv")
View(currentquarter)
library(readr)
worldmarket_update <- read_csv("~/Documents/worldmarket_update.csv")
View(worldmarket_update)
compare2 <- anti_join(worldmarket_update, lastquarter)
compare <- anti_join(lastquarter, worldmarket_update)
View(compare)
View(compare2)
View(compare)
View(compare2)
View(compare)
View(compare2)
View(compare)
compare[1,6]
compare[6,1]
View(compare2)
library(readr)
current_usa <- read_csv("~/DataMis/moad/Equities/BBBY/locations/Locations_Q2_2017/BBBY_locations_USA_Sept17.csv")
View(current_usa)
library(readr)
old_usa <- read_csv("~/DataMis/moad/Equities/BBBY/locations/Locations_Q1_2017/BBBY_locations_USA.csv")
View(old_usa)
View(current_usa)
names(old_usa) <- c("store_title", "latitude", "longitude")
View(old_usa)
usacomp1 <- anti_join(old_usa, current_usa)
View(usacomp1)
usacomp2 <- anti_join(current_usa, old_usa)
View(usacomp2)
library(readr)
cost_state <- read_csv("~/Documents/COST_Support_Docs/COST_with_state_dates.csv")
View(cost_state)
library(readr)
cost_csv <- read_csv("~/Downloads/COST_csv.csv")
View(cost_csv)
cost <- join(cost_csv, cost_state)
cost <- left_join(cost_csv, cost_state)
View(cost)
write_csv(cost, "~/Documents/COST_Support_Docs/cost_complete.csv")
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
state_batch <- read_csv("~/Downloads/Batch_2942722_batch_results.csv")
View(state_batch)
library(readr)
taco_state <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_mturk_state1.csv")
View(taco_state)
duplicated(taco_state)
true_state <- anyDuplicated(taco_state)
true_state
true_state <- duplicated(taco_state)
taco_state[duplicated(taco_state),]
matches <- taco_state[duplicated(taco_state),]
library(readr)
turk_submit <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_stateful_to_mturk.csv")
View(turk_submit)
not_match <- left_join(matches, turk_submit)
not_match <- anti_join(turk_submit, matches)
1239 + 462
View(not_match)
1239/1701
write_csv(not_match, "~/Documents/TSCO_Support_Docs/TSCO_state_mismatch.csv")
write_csv(matches, "~/Documents/TSCO_Support_Docs/TSCO_state_matches.csv")
library(readr)
mturk_state2 <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_mturk_state2.csv")
View(mturk_state2)
matches2 <- mturk_state2[duplicated(mturk_state2),]
all_match <- rbind(matches, matches2)
write_csv(all_matches, "~/Documents/TSCO_Support_Docs/TSCO_state_matches.csv")
write_csv(all_match, "~/Documents/TSCO_Support_Docs/TSCO_state_matches.csv")
not_match <- anti_join(turk_submit, all_match)
View(not_match)
write_csv(not_match, "~/Documents/TSCO_Support_Docs/TSCO_state_mismatch.csv")
full_match <- left_join(turk_submit, all_match)
full_match <- left_join(all_match, turk_submit)
View(full_match)
write_csv(full_match, "~/Documents/TSCO_Support_Docs/TSCO_state_matches.csv")
full_mismatch <- left_join(not_match, turk_submit)
View(full_mismatch)
write_csv(full_mismatch, "~/Documents/TSCO_Support_Docs/TSCO_state_mismatch.csv")
library(readr)
rejects <- read_csv("~/Documents/DKS_Support_Docs/DKS_polygon_reject_ids.csv")
View(rejects)
library(readr)
batch <- read_csv("~/Documents/DKS_Support_Docs/Batch_2944117_batch_results_polys.csv")
View(batch)
reject_batch <- left_join(batch, rejects)
names(rejects) <- "Input.id"
reject_batch <- left_join(batch, rejects)
reject_batch <- left_join(rejects, batch)
View(reject_batch)
write_csv(reject_batch, '~/Documents/DKS_Support_Docs/mturk_poly_rejects.csv')
accept_batch <- anti_join(rejects, batch)
accept_batch <- anti_join(batch, rejects)
write_csv(accept_batch, '~/Documents/DKS_Support_Docs/mturk_poly_accepts.csv')
library(readr)
starting <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_state_startingpoint.csv")
View(starting)
library(readr)
notes <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_Original_State_Notes.csv")
View(notes)
library(readr)
locations <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_stateful_to_mturk.csv")
View(locations)
View(notes)
View(locations)
View(notes)
View(locations)
loc_notes <- left_join(locations, notes)
View(loc_notes)
library(readr)
sprint <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_state_startingpoint.csv")
View(sprint)
View(loc_notes)
View(sprint)
starting_point <- left_join(sprint, loc_notes)
View(starting_point)
write_csv(starting_point, '~/Documents/TSCO_Support_Docs/TSCO_stateful_manual_research.csv')
library(readr)
batch <- read_csv("~/Documents/CBRL_Support_Docs/Batch_2946373_batch_results.csv")
View(batch)
library(readr)
rejects <- read_csv("~/Documents/CBRL_Support_Docs/CBRL_polygon_ids_reject.csv")
View(rejects)
batch_reject <- left_join(batch, rejects)
batch_reject <- left_join(rejects, batch)
View(batch_reject)
write_csv(batch_reject, '~/Documents/CBRL_Support_Docs/CBRL_batch_rejects.csv')
library(readr)
streetview <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_streetview_batch_results.csv")
View(streetview)
sv_matches <- streetview[duplicated(streetview),]
View(sv_matches)
sv_matches %>% filter(Answer.streetview == '2014')
View(streetview)
streetview %>% filter(Answer.streetview == '2017') %>% summarise(count = n())
library(readr)
dks_state <- read_csv("~/Documents/DKS_Support_Docs/Batch_2945928_batch_results_state1.csv")
View(dks_state)
library(readr)
dks_state1 <- read_csv("~/Documents/DKS_Support_Docs/DKS_results_state1.csv")
View(dks_state1)
dks_matches <- dks_state1[duplicated(dks_state1),]
library(readr)
dks_results <- read_csv("~/Documents/DKS_Support_Docs/DKS_results_state1.csv")
View(dks_results)
dks_matches <- dks_results[duplicated(dks_results),]
View(dks_matches)
library(readr)
DKS_reviewed <- read_csv("~/DataMis/moad/Equities/DKS/polygons/DKS_polygons_reviewed.csv")
View(DKS_reviewed)
dks_antimatch <- anti_join(DKS_reviewed, dks_matches)
dks_antimatch <- anti_join(DKS_reviewed, dks_matches, by='id')
dks_antimatch <- anti_join(DKS_reviewed, dks_matches, by.x='id', by.y='Input.id')
dks_antimatch <- anti_join(DKS_reviewed, dks_matches, by= c('id' = "Input.id"))
View(dks_antimatch)
View(dks_matches)
View(dks_results)
View(dks_state1)
View(dks_state)
View(dks_state1)
View(dks_state)
View(dks_matches)
manual_review_matches1 <- dks_matches %>% filter(Answer.optionsold != 'years')
manual_review_matches2 <- dks_matches %>% filter(Answer.optionsold == 'years') %>% filter(Answer.oldest <= 2)
manual_review_matches3 <- dks_matches %>% filter(Answer.optionsnew == 'years')
View(manual_review_matches3)
manual_review_dks <- rbind(manual_review_matches1,manual_review_matches2)
write_csv(manual_review_dks, '~/Documents/DKS_Support_Docs/DKS_State_Manual_Review_Matches.csv')
write_csv(dks_antimatch, '~/Documents/DKS_Support_Docs/DKS_State_Init_AntiMatch.csv')
library(readr)
streetview_results <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_streetview_batch_results.csv")
View(streetview_results)
sv_2016 <- streetview %>% filter(Answer.streetview == '2016') %>% unique()
View(sv_2016)
sv_2015 <- streetview %>% filter(Answer.streetview == '2015') %>% unique()
sv_2014 <- streetview %>% filter(Answer.streetview == '2014 or Before') %>% unique()
sv_2014 <- streetview %>% filter(Answer.streetview == '2014') %>% unique()
sv_none <- streetview %>% filter(Answer.streetview == 'none') %>% unique()
write_csv(sv_2016, '~/Documents/TSCO_Support_Docs/sv_2016.csv')
write_csv(sv_2015, '~/Documents/TSCO_Support_Docs/sv_2015.csv')
write_csv(sv_2014, '~/Documents/TSCO_Support_Docs/sv_2014.csv')
write_csv(sv_none, '~/Documents/TSCO_Support_Docs/sv_none.csv')
config <- livy_config(username="admin", password="hONfgw0hYFmY+/Usa5e3")
sc <- spark_connect(master = "https://master-10-0-4-244-59cab6e62b4473891b64039e.stackspace.space:8998", method = "livy", config=config)
library(sparklyr)
config <- livy_config(username="admin", password="hONfgw0hYFmY+/Usa5e3")
sc <- spark_connect(master = "https://master-10-0-4-244-59cab6e62b4473891b64039e.stackspace.space:8998", method = "livy", config=config)
library(dplyr)
iris_tbl <- copy_to(sc, iris)
spark_disconnect(sc)
library("blogdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:blogdown", unload=TRUE)
library("blogdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("blogdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(readr)
tsco_matches <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_state_matches.csv")
View(tsco_matches)
library(dplyr)
old <- tsco_matches %>% filter(time_old > 2) %>% filter(unit_old == 'years')
config <- livy_config(username="admin", password="pWDDx8EJyTK3JIGPWw8v")
sc <- spark_connect(master = "https://master-10-0-5-175-59d676232b4473a75311b7bd.stackspace.space:8998", method = "livy", config=config)
library("sparklyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
config <- livy_config(username="admin", password="pWDDx8EJyTK3JIGPWw8v")
sc <- spark_connect(master = "https://master-10-0-5-175-59d676232b4473a75311b7bd.stackspace.space:8998", method = "livy", config=config)
library(dplyr)
iris_tbl <- copy_to(sc, iris)
spark_disconnect(sc)
config <- livy_config(username="admin", password="CY+OPdRBeChuwGWtKu3O")
sc <- spark_connect(master = "https://master-10-0-6-22-59d676332b4473a75311b7be.stackspace.space:8998", method = "livy", config=config)
iris_tbl <- copy_to(sc, iris)
partition_iris <- sdf_partition(iris_tbl, training=0.5, testing=0.5)
sdf_register(partition_iris, c("spark_iris_training", "spark_iris_test"))
tidy_iris <- tbl(sc, "spark_iris_training") %>%
select(Species, Petal_Length, Petal_Width)
model_iris <- tidy_iris %>%
ml_decision_tree(response="Species", features=c("Petal_Length", "Petal_Width"))
test_iris <- tbl(sc, "spark_iris_test")
pred_iris <- sdf_predict(model_iris, test_iris) %>%
collect
library(ggplot2)
pred_iris %>%
inner_join(data.frame(prediction=0:2, lab=model_iris$model.parameters$labels)) %>%
ggplot(aes(Petal_Length, Petal_Width, col=lab)) + geom_point()
spark_disconnect(sc)
df <- data.frame(
A=1:50,
B=101:150
)
df
tmp <- data.frame(
X=df$B,
ind=rep(1:10, nrow(df)/10)
)
tmp
unstack(tmp, X~ind)
head(tsco_matches)
View(old)
need_checks <- anti_join(old, tsco_matches)
need_checks <- left_join(tsco_matches, old)
need_checks <- anti_join(tsco_matches, old)
View(need_checks)
library(readr)
TSCO_mismatch <- read_csv("~/Documents/TSCO_Support_Docs/TSCO_state_mismatch.csv")
View(TSCO_mismatch)
total_TSCO_check <- rbind(TSCO_mismatch, need_checks)
View(need_checks)
tsco1 <- needs_checks %>% select(id, latitude, longitude, ticker, company, store, address, state)
tsco1 <- need_checks %>% select(id, latitude, longitude, ticker, company, store, address, state)
tsco2 <- TSCO_mismatch %>% select(id, latitude, longitude, ticker, company, store, address, state)
total_TSCO_check <- rbind(tsco1, tsco2)
write_csv(total_TSCO_check, '~/Documents/TSCO_Support_Docs/TSCO_need_streetview_validation')
write_csv(total_TSCO_check, '~/Documents/TSCO_Support_Docs/TSCO_need_streetview.csv')
1255/3
1255/2
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
runApp('Documents/ShinyApps/Hist')
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("shinydashboard")
runApp('Documents/ShinyApps/Hist')
shinyApp('~/Downloads/CCMapsProjectV5/')
shinyApp('~/Downloads/CCMapsProjectV5/ui.R', '~/Downloads/CCMapsProjectV5/server.R')
runApp()
setwd("~/Downloads/CCMapsProjectV5")
runApp()
